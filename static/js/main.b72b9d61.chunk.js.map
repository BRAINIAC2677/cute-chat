{"version":3,"sources":["components/globalContext.js","services/firebase.js","services/firebaseui.js","pages/Login.js","components/styleContext.js","custom_hooks/useWindowDimensions.js","components/ChatHead.js","components/ChatSideBar.js","custom_hooks/useRoomIndex.js","components/BlankRoom.js","components/ComposeChatText.js","components/InboxHeader.js","components/ChatText.js","components/ChatTexts.js","components/ChatBox.js","components/SearchResult.js","components/Search.js","components/Logout.js","components/ChatHeader.js","components/GreyOut.js","components/ChatFooter.js","pages/Chat.js","App.js","index.js"],"names":["globalContext","React","createContext","GlobalContextProvider","props","useState","user","chatRooms","currentRoomId","global","setGlobal","Provider","value","children","fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","Login","className","firebaseAuth","styleContext","StyleContextProvider","searchIsOn","focused","breakPoint","myStyle","setMyStyle","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","ChatHead","useWindowsDimensions","useContext","info","name","room_id","imgUrl","active","activeStatus","style","backgroundColor","onClick","prevGlobal","prevMyStyle","src","alt","fontSize","ChatSideBar","chatHeads","map","room","focusedStyle","display","gridArea","useRoomIndex","id","findIndex","BlankRoom","color","displayName","icon","faHandshake","ComposeChatText","currentRoomInd","inpVal","setInpVal","placeholder","onChange","event","target","handleChange","curTime","Date","newText","now","author","email","body","time","toLocaleTimeString","updTexts","texts","length","shift","push","collection","doc","update","then","console","log","catch","error","faPaperPlane","InboxHeader","Text","currentUser","photoURL","imgStyle","contentStyle","marginLeft","order","marginRight","alignSelf","filter","text","faTrashAlt","ChatTexts","scrollRef","useRef","current","scrollTop","scrollHeight","clientHeight","ref","ChatText","ChatBox","SearchResult","a","members","includes","newRoom","add","docRef","where","get","updChatRooms","newChatRooms","docs","data","handleClick","Search","userBar","setUserBar","trim","snapShot","tempUserBars","forEach","faSearch","Logout","uid","signOut","faSignOutAlt","ChatHeader","GreyOut","zIndex","ChatFooter","faUserFriends","faCommentDots","Chat","dbUserListener","dbRoomListener","onSnapshot","index","otherEndEmail","JSON","stringify","i","Fragment","alignItems","justifyContent","App","authChange","onAuthStateChanged","newUser","set","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72b9d61.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nconst globalContext = React.createContext();\r\n\r\nfunction GlobalContextProvider(props) {\r\n  const [global, setGlobal] = useState({\r\n    user: null,\r\n    chatRooms: null,\r\n    currentRoomId: null,\r\n  });\r\n\r\n  return (\r\n    <globalContext.Provider value={{ global, setGlobal }}>\r\n      {props.children}\r\n    </globalContext.Provider>\r\n  );\r\n}\r\n\r\nexport { GlobalContextProvider, globalContext };\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBQwYLNreWnwSEeNC3eOzr-2q-1PASglCI\",\r\n  authDomain: \"cute-chat-43080.firebaseapp.com\",\r\n  projectId: \"cute-chat-43080\",\r\n  storageBucket: \"cute-chat-43080.appspot.com\",\r\n  messagingSenderId: \"730231964779\",\r\n  appId: \"1:730231964779:web:198ad75e908791fa541d2e\",\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\nlet db = fire.firestore();\r\n\r\nexport { fire, db };\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst uiConfig = {\r\n  signInFlow: \"popup\",\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    // Avoid redirects after sign-in.\r\n    signInSuccessWithAuthResult: () => {\r\n      return false;\r\n    },\r\n  },\r\n};\r\n\r\nexport default uiConfig;\r\n","import React from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { fire } from \"../services/firebase\";\r\nimport uiConfig from \"../services/firebaseui\";\r\nimport \"../styles/Login.css\";\r\n\r\nfunction Login() {\r\n  /* console.log(\"Login Component.\"); */\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"login-container elevated\">\r\n        <p className=\"item title\">Login</p>\r\n        <div className=\"item\">\r\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={fire.auth()} />\r\n        </div>\r\n        <p className=\"item dev\">Developed By: Asif Azad</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\n\r\nconst styleContext = React.createContext();\r\n\r\nfunction StyleContextProvider(props) {\r\n  const [myStyle, setMyStyle] = useState({\r\n    searchIsOn: false,\r\n    focused: -1,\r\n    breakPoint: 1023,\r\n  });\r\n\r\n  return (\r\n    <styleContext.Provider value={{ myStyle, setMyStyle }}>\r\n      {props.children}\r\n    </styleContext.Provider>\r\n  );\r\n}\r\n\r\nexport { StyleContextProvider, styleContext };\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nexport default useWindowDimensions;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport { styleContext } from \"./styleContext\";\r\nimport useWindowsDimensions from \"../custom_hooks/useWindowDimensions\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nfunction ChatHead(props) {\r\n  /* console.log(\"ChatHead Component\"); */\r\n\r\n  const { width } = useWindowsDimensions();\r\n  const { myStyle, setMyStyle } = useContext(styleContext);\r\n  const { breakPoint } = myStyle;\r\n  const { setGlobal } = useContext(globalContext);\r\n  const { name, room_id, imgUrl, active } = props.info;\r\n  const activeStatus = active ? \"Active\" : \"Inactive\";\r\n\r\n  function handleClick() {\r\n    setGlobal((prevGlobal) => {\r\n      return { ...prevGlobal, currentRoomId: room_id };\r\n    });\r\n\r\n    if (width <= breakPoint) {\r\n      setMyStyle((prevMyStyle) => {\r\n        return { ...prevMyStyle, focused: 0 };\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <button\r\n      style={\r\n        active\r\n          ? { backgroundColor: \"rgba(0, 255, 0, 0.3)\" }\r\n          : { backgroundColor: \"rgba(255, 0, 0, 0.3)\" }\r\n      }\r\n      className=\"chat-head elevated\"\r\n      onClick={() => handleClick()}\r\n    >\r\n      <img className=\"avatar\" src={imgUrl} alt=\"avatar\" />\r\n      <p>{name}</p>\r\n      <p style={{ fontSize: \"var(--font-size-3)\" }}>{activeStatus}</p>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ChatHead;\r\n","import React, { useContext } from \"react\";\r\nimport ChatHead from \"./ChatHead\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport { styleContext } from \"./styleContext\";\r\n\r\nfunction ChatSideBar() {\r\n  /* console.log(\"ChatSideBar component.\"); */\r\n\r\n  const { global } = useContext(globalContext);\r\n  const { myStyle } = useContext(styleContext);\r\n  const { focused } = myStyle;\r\n  const { chatRooms } = global;\r\n\r\n  const chatHeads = chatRooms.map((room) => {\r\n    return <ChatHead key={room.room_id} info={room} />;\r\n  });\r\n\r\n  let focusedStyle = {\r\n    display: \"block\",\r\n    gridArea: \"focus\",\r\n  };\r\n\r\n  if (focused === -1) {\r\n    focusedStyle.gridArea = \"sidebar\";\r\n  }\r\n\r\n  const hiddenStyle = {\r\n    display: \"none\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-sidebar pressed\"\r\n      style={focused === 0 ? hiddenStyle : focusedStyle}\r\n    >\r\n      {chatHeads}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatSideBar;\r\n","import { useContext } from \"react\";\r\nimport { globalContext } from \"../components/globalContext\";\r\n\r\nfunction useRoomIndex(id) {\r\n  const { global } = useContext(globalContext);\r\n  const { chatRooms } = global;\r\n  if (id === null) {\r\n    return null;\r\n  }\r\n  const index = chatRooms.findIndex((room) => room.room_id === id);\r\n  return index;\r\n}\r\n\r\nexport default useRoomIndex;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHandshake } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction BlankRoom() {\r\n  /* console.log(\"BlankRoom Component.\"); */\r\n\r\n  const { global } = useContext(globalContext);\r\n  const { user } = global;\r\n\r\n  return (\r\n    <div className=\"blank-room\">\r\n      <p\r\n        style={{ color: \"var(--accent-col-2)\" }}\r\n      >{`Welcome To CuteChat ${user.displayName}`}</p>\r\n      <div className=\"faded-icon\">\r\n        <FontAwesomeIcon icon={faHandshake} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlankRoom;\r\n","import React from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport useRoomIndex from \"../custom_hooks/useRoomIndex\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction ComposeChatText() {\r\n  /* console.log(\"ComposeChatText Component\"); */\r\n\r\n  const { global } = React.useContext(globalContext);\r\n  const { chatRooms, currentRoomId, user } = global;\r\n  const currentRoomInd = useRoomIndex(currentRoomId);\r\n\r\n  const [inpVal, setInpVal] = React.useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setInpVal(event.target.value);\r\n  }\r\n\r\n  function handleClick() {\r\n    const curTime = new Date();\r\n    let newText = {\r\n      id: Date.now(),\r\n      author: user.email,\r\n      body: inpVal,\r\n      time: curTime.toLocaleTimeString(),\r\n    };\r\n\r\n    let updTexts = chatRooms[currentRoomInd].texts;\r\n    if (updTexts.length >= 50) {\r\n      updTexts.shift();\r\n    }\r\n    updTexts.push(newText);\r\n\r\n    db.collection(\"cute_rooms\")\r\n      .doc(currentRoomId)\r\n      .update({ texts: updTexts })\r\n      .then(() => console.log(\"success writing\"))\r\n      .catch((error) => console.log(error));\r\n\r\n    setInpVal(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"compose-text\">\r\n      <input\r\n        className=\"pressed\"\r\n        placeholder=\"Write your message\"\r\n        value={inpVal}\r\n        onChange={(event) => handleChange(event)}\r\n      />\r\n      <button className=\"elevated rounded-btn\" onClick={handleClick}>\r\n        <FontAwesomeIcon icon={faPaperPlane} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComposeChatText;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport useRoomIndex from \"../custom_hooks/useRoomIndex\";\r\n\r\nfunction InboxHeader() {\r\n  const { global } = useContext(globalContext);\r\n  const { user, chatRooms, currentRoomId } = global;\r\n  const currentRoomInd = useRoomIndex(currentRoomId);\r\n  let { name, imgUrl } = chatRooms[currentRoomInd];\r\n\r\n  return (\r\n    <div className=\"inbox-header\">\r\n      <img className=\"avatar elevated\" src={imgUrl} alt=\"avatar\" />\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InboxHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { db, fire } from \"../services/firebase\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport useRoomIndex from \"../custom_hooks/useRoomIndex\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Text(props) {\r\n  /* console.log(\"Text component\"); */\r\n\r\n  const { global } = useContext(globalContext);\r\n  const { chatRooms, currentRoomId, user } = global;\r\n  const currentRoomInd = useRoomIndex(currentRoomId);\r\n  const { id, body, time, author } = props.info;\r\n\r\n  const imgUrl =\r\n    author === fire.auth().currentUser.email\r\n      ? fire.auth().currentUser.photoURL\r\n      : chatRooms[currentRoomInd].imgUrl;\r\n\r\n  function handleDelete() {\r\n    let updTexts = chatRooms[currentRoomInd].texts.filter((text) => {\r\n      return text.id !== id;\r\n    });\r\n\r\n    db.collection(\"cute_rooms\")\r\n      .doc(currentRoomId)\r\n      .update({ texts: updTexts })\r\n      .then(() => console.log(\"success writing\"))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  let imgStyle = {};\r\n  let contentStyle = {\r\n    marginLeft: \"1rem\",\r\n  };\r\n\r\n  if (author === user.email) {\r\n    imgStyle = {\r\n      order: \"2\",\r\n    };\r\n\r\n    contentStyle = {\r\n      order: \"1\",\r\n      marginRight: \"1rem\",\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-text\"\r\n      style={author === user.email ? { alignSelf: \"flex-end\" } : null}\r\n    >\r\n      <img className=\"avatar\" src={imgUrl} style={imgStyle} alt=\"avatar\" />\r\n      <div className=\"chat-text-content elevated\" style={contentStyle}>\r\n        <p className=\"chat-text-time\">{time}</p>\r\n        <p className=\"chat-text-body\">{body}</p>\r\n        {author === user.email && (\r\n          <button className=\"chat-text-delete\" onClick={handleDelete}>\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport useRoomIndex from \"../custom_hooks/useRoomIndex\";\r\nimport ChatText from \"./ChatText\";\r\n\r\nfunction ChatTexts() {\r\n  const { global } = useContext(globalContext);\r\n  const { chatRooms, currentRoomId } = global;\r\n  const currentRoomInd = useRoomIndex(currentRoomId);\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current.scrollTop =\r\n      scrollRef.current.scrollHeight - scrollRef.current.clientHeight;\r\n  });\r\n\r\n  return (\r\n    <div className=\"chat-texts\" ref={scrollRef}>\r\n      {chatRooms[currentRoomInd].texts.map((text) => {\r\n        return <ChatText key={text.id} info={text} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatTexts;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport { styleContext } from \"./styleContext\";\r\nimport useRoomIndex from \"../custom_hooks/useRoomIndex\";\r\nimport BlankRoom from \"./BlankRoom\";\r\nimport ComposeChatText from \"./ComposeChatText\";\r\nimport InboxHeader from \"../components/InboxHeader\";\r\nimport ChatTexts from \"../components/ChatTexts\";\r\n\r\nfunction ChatBox() {\r\n  /* console.log(\"ChatBox component\"); */\r\n\r\n  const { myStyle } = useContext(styleContext);\r\n  const { focused } = myStyle;\r\n\r\n  const { global } = useContext(globalContext);\r\n  const { currentRoomId } = global;\r\n  const currentRoomInd = useRoomIndex(currentRoomId);\r\n\r\n  let focusedStyle = {\r\n    display: \"grid\",\r\n    gridArea: \"focus\",\r\n  };\r\n\r\n  if (focused === -1) {\r\n    focusedStyle.gridArea = \"box\";\r\n  }\r\n\r\n  const hiddenStyle = {\r\n    display: \"none\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"chat-box pressed\"\r\n      style={focused === 1 ? hiddenStyle : focusedStyle}\r\n    >\r\n      {currentRoomInd === null ? (\r\n        <BlankRoom />\r\n      ) : (\r\n        <>\r\n          <InboxHeader />\r\n          <ChatTexts />\r\n          <ComposeChatText />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n","import React, { useContext } from \"react\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport { styleContext } from \"./styleContext\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nfunction SearchResult(props) {\r\n  /* console.log(\"SearchResult component.\"); */\r\n\r\n  const { global, setGlobal } = useContext(globalContext);\r\n  const { setMyStyle } = useContext(styleContext);\r\n  const { chatRooms, user } = global;\r\n  const { name, email, imgUrl } = props.info;\r\n\r\n  async function handleClick() {\r\n    /* console.log(\"Search Result from searches Click\"); */\r\n\r\n    if (email === user.email) {\r\n      console.log(\"This is You!\");\r\n      setMyStyle((prevMyStyle) => {\r\n        return { ...prevMyStyle, searchIsOn: false };\r\n      });\r\n      return;\r\n    }\r\n\r\n    let currentRoomInd = chatRooms.findIndex((room) => {\r\n      return room.members.includes(email);\r\n    });\r\n    if (currentRoomInd === -1) {\r\n      const members = [user.email, email];\r\n\r\n      const newRoom = { members, texts: [] };\r\n      const docRef = await db.collection(\"cute_rooms\").add(newRoom);\r\n\r\n      /* console.log(`${docRef.id} successfully room added.`); */\r\n\r\n      const updChatRooms = await db\r\n        .collection(\"cute_rooms\")\r\n        .where(\"members\", \"array-contains\", user.email)\r\n        .get();\r\n\r\n      let newChatRooms = [];\r\n\r\n      for (let doc of updChatRooms.docs) {\r\n        newChatRooms.push({ room_id: doc.id, ...doc.data() });\r\n      }\r\n\r\n      setGlobal((prevGlobal) => {\r\n        return {\r\n          ...prevGlobal,\r\n          chatRooms: newChatRooms,\r\n          currentRoomId: docRef.id,\r\n        };\r\n      });\r\n    } else {\r\n      let currentRoomId = chatRooms[currentRoomInd].room_id;\r\n      setGlobal((prevGlobal) => {\r\n        return { ...prevGlobal, currentRoomInd, currentRoomId };\r\n      });\r\n    }\r\n    setMyStyle((prevMyStyle) => {\r\n      return { ...prevMyStyle, searchIsOn: false };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <button className=\"search-result elevated\" onClick={() => handleClick()}>\r\n      <img className=\"avatar\" src={imgUrl} alt=\"\" />\r\n      <p>{name}</p>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport SearchResult from \"./SearchResult\";\r\nimport { styleContext } from \"./styleContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Search() {\r\n  /* console.log(\"Search Component\"); */\r\n\r\n  const { myStyle, setMyStyle } = useContext(styleContext);\r\n  const { searchIsOn } = myStyle;\r\n  const [inpVal, setInpVal] = useState(\"\");\r\n  const [userBar, setUserBar] = useState([]);\r\n  function handleChange(event) {\r\n    setInpVal(event.target.value);\r\n  }\r\n\r\n  function handleSearch() {\r\n    /* console.log(\"handleSearch clicked.\"); */\r\n\r\n    if (inpVal) {\r\n      /* console.log(`after setMyStyle: ${myStyle}`); */\r\n      db.collection(\"cute_users\")\r\n        .where(\"name\", \"==\", inpVal.trim())\r\n        .get()\r\n        .then((snapShot) => {\r\n          let tempUserBars = [];\r\n\r\n          snapShot.forEach((doc) => {\r\n            tempUserBars.push(<SearchResult key={doc.id} info={doc.data()} />);\r\n          });\r\n          setUserBar(tempUserBars);\r\n          setMyStyle((prevMyStyle) => {\r\n            return { ...prevMyStyle, searchIsOn: true };\r\n          });\r\n          setInpVal(\"\");\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        className=\"pressed\"\r\n        value={inpVal}\r\n        placeholder=\"Search\"\r\n        onChange={(event) => handleChange(event)}\r\n      />\r\n      <button className=\"rounded-btn elevated\" onClick={handleSearch}>\r\n        <FontAwesomeIcon icon={faSearch} />\r\n      </button>\r\n      <div\r\n        className=\"search-results\"\r\n        style={searchIsOn ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        {userBar.length === 0 ? <div>No Matched Result</div> : userBar}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { fire, db } from \"../services/firebase\";\r\nimport useWindowDimensions from \"../custom_hooks/useWindowDimensions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Logout() {\r\n  /* console.log(\"Logout Component.\"); */\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  function handleLogout() {\r\n    let uid = fire.auth().currentUser.uid;\r\n    fire\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        db.collection(\"cute_users\")\r\n          .doc(uid)\r\n          .update({ active: false })\r\n          .then(() => console.log(`active status changed`))\r\n          .catch((error) =>\r\n            console.log(`${error} in chaging active status in database.`)\r\n          );\r\n      });\r\n  }\r\n  return (\r\n    <button\r\n      className={width <= 400 ? \"rounded-btn elevated\" : \"logout elevated\"}\r\n      onClick={handleLogout}\r\n    >\r\n      {width <= 480 ? <FontAwesomeIcon icon={faSignOutAlt} /> : \"Logout\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useContext } from \"react\";\r\nimport { fire } from \"../services/firebase\";\r\nimport { globalContext } from \"./globalContext\";\r\nimport Search from \"./Search\";\r\nimport Logout from \"./Logout\";\r\n\r\nfunction ChatHeader() {\r\n  const { global } = useContext(globalContext);\r\n  const { user } = global;\r\n\r\n  return (\r\n    <div className=\"chat-header elevated\">\r\n      <img className=\"avatar elevated\" src={user.photoURL} alt=\"avatar\" />\r\n      <Search />\r\n      <Logout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { styleContext } from \"./styleContext\";\r\n\r\nfunction GreyOut() {\r\n  const { myStyle } = useContext(styleContext);\r\n  const { searchIsOn } = myStyle;\r\n\r\n  return (\r\n    <div\r\n      className=\"greyout\"\r\n      style={searchIsOn ? { zIndex: \"1\" } : { zIndex: \"-1\" }}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default GreyOut;\r\n","import React, { useContext } from \"react\";\r\nimport { styleContext } from \"./styleContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCommentDots,\r\n  faUserFriends,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction ChatFooter() {\r\n  const { myStyle, setMyStyle } = useContext(styleContext);\r\n  const { focused } = myStyle;\r\n\r\n  function handleClick() {\r\n    setMyStyle((prevMyStyle) => {\r\n      const focused = 1 - prevMyStyle.focused;\r\n      return { ...prevMyStyle, focused };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-footer elevated\">\r\n      <button className=\"elevated rounded-btn\" onClick={handleClick}>\r\n        <FontAwesomeIcon icon={focused === 0 ? faUserFriends : faCommentDots} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatFooter;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { globalContext } from \"../components/globalContext\";\r\nimport { db } from \"../services/firebase\";\r\nimport ChatSideBar from \"../components/ChatSideBar\";\r\nimport ChatBox from \"../components/ChatBox\";\r\nimport ChatHeader from \"../components/ChatHeader\";\r\nimport GreyOut from \"../components/GreyOut\";\r\nimport ChatFooter from \"../components/ChatFooter\";\r\nimport { styleContext } from \"../components/styleContext\";\r\nimport useWindowDimensions from \"../custom_hooks/useWindowDimensions\";\r\nimport \"../styles/Chat.css\";\r\n\r\nfunction Chat() {\r\n  /* console.log(\"Chat Component\"); */\r\n\r\n  const { global, setGlobal } = useContext(globalContext);\r\n  const { myStyle, setMyStyle } = useContext(styleContext);\r\n  const { breakPoint } = myStyle;\r\n  const { width } = useWindowDimensions();\r\n  const { user, chatRooms } = global;\r\n\r\n  /*   console.log(`width: ${width}`);\r\n  console.log(`focused: ${myStyle.focused}`); */\r\n\r\n  useEffect(() => {\r\n    if (width <= breakPoint) {\r\n      setMyStyle((prevMyStyle) => {\r\n        return { ...prevMyStyle, focused: 0 };\r\n      });\r\n    } else {\r\n      setMyStyle((prevMyStyle) => {\r\n        return { ...prevMyStyle, focused: -1 };\r\n      });\r\n    }\r\n  }, [width]);\r\n\r\n  /* listening to the chatrooms and for each room another nested listener is added for the other user of the room. And if it is the last room then the chatRooms is updated in the global context.\r\n\r\n  if there is no chatRooms for the user setGlobal is called with empty array. \r\n  \r\n  chatRooms = {room_id, members, texts[], name, imgUrl, active,}*/\r\n\r\n  useEffect(() => {\r\n    let dbUserListener = [];\r\n    const dbRoomListener = db\r\n      .collection(\"cute_rooms\")\r\n      .where(\"members\", \"array-contains\", user.email)\r\n      .onSnapshot((snapShot) => {\r\n        let newChatRooms = [];\r\n        snapShot.forEach((doc) => {\r\n          newChatRooms.push({ room_id: doc.id, ...doc.data() });\r\n        });\r\n\r\n        if (newChatRooms.length === 0) {\r\n          setGlobal((prevGlobal) => {\r\n            return { ...prevGlobal, chatRooms: newChatRooms };\r\n          });\r\n        }\r\n\r\n        for (let index in newChatRooms) {\r\n          let otherEndEmail =\r\n            newChatRooms[index].members[0] === user.email\r\n              ? newChatRooms[index].members[1]\r\n              : newChatRooms[index].members[0];\r\n          dbUserListener.push(\r\n            db\r\n              .collection(\"cute_users\")\r\n              .where(\"email\", \"==\", otherEndEmail)\r\n              .onSnapshot((snapShot) => {\r\n                /* console.log(`snapShot: ${JSON.stringify(snapShot)}`); */\r\n                snapShot.forEach((user) => {\r\n                  console.log(`\\n\\n\\nuser ${JSON.stringify(user)}`);\r\n                  newChatRooms[index] = {\r\n                    ...user.data(),\r\n                    ...newChatRooms[index],\r\n                  };\r\n\r\n                  if (index == newChatRooms.length - 1) {\r\n                    setGlobal((prevGlobal) => {\r\n                      return { ...prevGlobal, chatRooms: newChatRooms };\r\n                    });\r\n                  }\r\n                });\r\n              })\r\n          );\r\n        }\r\n      });\r\n\r\n    return function cleanup() {\r\n      dbRoomListener();\r\n      for (let i of dbUserListener) {\r\n        i();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadingStyle = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    fontSize: \"1.5rem\",\r\n    backgroundColor: \"var(--primary-col)\",\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {chatRooms === null ? (\r\n        <div style={loadingStyle}>\r\n          <p>Loading. . .</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chat-container\">\r\n          <ChatHeader />\r\n          <ChatSideBar />\r\n          <ChatBox />\r\n          <ChatFooter />\r\n          <GreyOut />\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { globalContext } from \"./components/globalContext\";\r\nimport { fire, db } from \"./services/firebase\";\r\nimport Login from \"./pages/Login\";\r\nimport Chat from \"./pages/Chat\";\r\nimport { StyleContextProvider } from \"./components/styleContext\";\r\n\r\nfunction App() {\r\n  /* console.log(\"App component\"); */\r\n\r\n  const { global, setGlobal } = useContext(globalContext);\r\n  const { user } = global;\r\n\r\n  useEffect(() => {\r\n    const authChange = fire.auth().onAuthStateChanged((user) => {\r\n      /* console.log(`Auth Changed. User: ${user}`); */\r\n\r\n      user === null\r\n        ? setGlobal((prevGlobal) => {\r\n            return {\r\n              ...prevGlobal,\r\n              user: null,\r\n              currentRoomId: null,\r\n              chatRooms: null,\r\n            };\r\n          })\r\n        : setGlobal((prevGlobal) => {\r\n            return { ...prevGlobal, user };\r\n          });\r\n\r\n      if (user) {\r\n        let newUser = {\r\n          active: true,\r\n          name: user.displayName,\r\n          email: user.email,\r\n          imgUrl: user.photoURL,\r\n        };\r\n\r\n        db.collection(\"cute_users\")\r\n          .doc(fire.auth().currentUser.uid)\r\n          .set(newUser)\r\n          .then(() => console.log(` new user successfully in.`))\r\n          .catch((error) =>\r\n            console.log(`${error} in writing new user in database.`)\r\n          );\r\n      }\r\n    });\r\n\r\n    return function cleanup() {\r\n      authChange();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyleContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {user ? <Chat /> : <Login />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </StyleContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalContextProvider } from \"./components/globalContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalContextProvider>\r\n      <App />\r\n    </GlobalContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}